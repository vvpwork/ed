@import "../../style/variable.scss";

@mixin transition {
  @for $i from 1 through 50 {
    &:nth-child(#{$i}) {
      transition: transform
        1s
        #{$i *
        0.08}s
        cubic-bezier(0.29, 1.4, 0.44, 0.96);
    }
  }
}

@mixin alpha-attribute($attribute, $color, $background) {
  $percent: alpha($color) * 100%;
  $opaque: opacify($color, 1);
  $solid-color: mix($opaque, $background, $percent);
  #{$attribute}: $solid-color;
  #{$attribute}: $color;
}

.drawerList {
  position: fixed;
  right: 0;
  top: 0;
  height: 100vh;
  width: 100vw;
  transform: translate(100vw, 0);
  box-sizing: border-box;
  pointer-events: none;
  padding-top: 125px;
  transition: width 475ms ease-out, transform 450ms ease,
    border-radius 0.8s 0.1s ease;
  border-bottom-left-radius: 100vw;
  @include alpha-attribute("background-color", rgba($contrast, 0.8), white);
  @media (min-width: 768px) {
    width: 100vw;
  }
  ul {
    height: 100%;
    width: 100%;
    margin: 0;
    padding: 0;
    overflow: auto;
    overflow-x: hidden;
    pointer-events: auto;
  }
  li {
    list-style: none;
    text-transform: uppercase;
    pointer-events: auto;
    white-space: nowrap;
    box-sizing: border-box;
    transform: translatex(100vw);
    &:last-child {
      margin-bottom: 2em;
    }
    a {
      text-decoration: none;
      color: $text;
      text-align: center;
      display: block;
      padding: 1rem;
      font-size: calc(24px - 0.5vw);
      @media (min-width: 768px) {
        text-align: center;
        padding: 2 rem;
      }
      &:hover {
        cursor: pointer;
        @include alpha-attribute("background-color", rgba($main, 0.5), white);
      }
    }
  }
}

input.hamburger {
  display: none;
  &:checked {
    & ~ .drawerList {
      transform: translatex(0);
      border-bottom-left-radius: 0;
      li {
        transform: translatex(0);
        @include transition;
        a {
          padding-right: 15px;
        }
      }
    }
    // & ~ label {
    //   > i {
    //     background-color: transparent;
    //     &:before {
    //       transform: translate(-50%, -50%) rotate(-45deg);
    //       background-color: #fff;
    //     }
    //     &:after {
    //       transform: translate(-50%, -50%) rotate(45deg);
    //       background-color: #fff;
    //     }
    //   }
    // }
  }
}

label.hamburger {
  display: block;
  position: fixed;
  z-index: 9999;
  width: 50px;
  height: 50px;
  top: 20px;
  right: 50px;
  // &:hover {
  //   cursor: pointer;
  // }

  // > i {
  //   position: absolute;
  //   width: 100%;
  //   height: 2px;
  //   top: 50%;
  //   background-color: $text;
  //   pointer-events: auto;
  //   &:before,
  //   &:after {
  //     position: absolute;
  //     display: block;
  //     width: 100%;
  //     height: 2px;
  //     left: 50%;
  //     background-color: $text;
  //     content: "";
  //     transition: transform 0.35s;
  //     transform-origin: 50% 50%;
  //   }
  //   &:before {
  //     transform: translate(-50%, -14px);
  //   }
  //   &:after {
  //     transform: translate(-50%, 14px);
  //   }
  // }
}


